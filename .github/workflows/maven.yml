# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: pull_request

on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - master
      - 'v[0-9]+.*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: download neo4j-contrib & graphframes & pulsar-spark-connector dependency
      run: |
        wget https://oss-cdn.nebula-graph.com.cn/jar-packages/neo4j-contrib.zip
        wget https://oss-cdn.nebula-graph.com.cn/jar-packages/graphframes.zip
        wget https://oss-cdn.nebula-graph.com.cn/jar-packages/streamnative.zip
        unzip -o -d ~/.m2/repository/ neo4j-contrib.zip
        unzip -o -d ~/.m2/repository/ graphframes.zip
        rm -rf ~/.m2/repository/io/streamnative
        unzip -o -d ~/.m2/repository/io/ streamnative.zip

    - name: Install nebula-graph
      run: |
        mkdir tmp
        pushd tmp
        git clone https://github.com/vesoft-inc/nebula-docker-compose.git
        pushd nebula-docker-compose/
        cp ../../nebula-exchange/src/test/resources/docker-compose.yaml .
        docker-compose up -d
        sleep 10
        popd
        popd

    - name: Build with Maven
      run: mvn -B package

    - uses: codecov/codecov-action@v2
