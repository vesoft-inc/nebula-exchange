# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: release

on:
  release:
    types: published

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Install nebula-graph
        run: |
          mkdir tmp
          pushd tmp
          git clone https://github.com/vesoft-inc/nebula-docker-compose.git
          pushd nebula-docker-compose/
          cp ../../exchange-common/src/test/resources/docker-compose.yaml .
          docker-compose up -d
          sleep 10
          popd
          popd

      - name: Build with Maven
        run: |
          mvn clean package -pl nebula-exchange_spark_2.2 -am -Pscala-2.11 -Pspark-2.2
          mvn clean package -pl nebula-exchange_spark_2.4 -am -Pscala-2.11 -Pspark-2.4
          mvn clean package -pl nebula-exchange_spark_3.0 -am -Pscala-2.12 -Pspark-3.0

      - name: Get the version
        id: get_version
        run: |
          tag=$(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
          tagnum=$(echo $tag | sed 's/^v//')
          echo "::set-output name=tag::$tag"
          echo "::set-output name=tagnum::$tagnum"
        shell: bash

      - name: upload to release assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            nebula-exchange_spark_2.2/target/nebula-exchange_spark_2.2-${{ steps.get_version.outputs.tagnum }}.jar
            nebula-exchange_spark_2.4/target/nebula-exchange_spark_2.4-${{ steps.get_version.outputs.tagnum }}.jar
            nebula-exchange_spark_3.0/target/nebula-exchange_spark_3.0-${{ steps.get_version.outputs.tagnum }}.jar

      - name: upload to oss
        run: |
          wget http://gosspublic.alicdn.com/ossutil/1.7.8/ossutil64
          chmod 755 ossutil64
          ./ossutil64 -e ${{ secrets.OSS_ENDPOINT }} \
            -i ${{ secrets.OSS_ID }} \
            -k ${{ secrets.OSS_SECRET }} \
            -f cp nebula-exchange_spark_2.2/target/nebula-exchange_spark_2.2-${{ steps.get_version.outputs.tagnum}}.jar oss://nebula-graph/maven2/nebula-exchange/${{ steps.get_version.outputs.tagnum }}/
          ./ossutil64 -e ${{ secrets.OSS_ENDPOINT }} \
            -i ${{ secrets.OSS_ID }} \
            -k ${{ secrets.OSS_SECRET }} \
            -f cp nebula-exchange_spark_2.4/target/nebula-exchange_spark_2.4-${{ steps.get_version.outputs.tagnum }}.jar oss://nebula-graph/maven2/nebula-exchange/${{ steps.get_version.outputs.tagnum }}/
          ./ossutil64 -e ${{ secrets.OSS_ENDPOINT }} \
            -i ${{ secrets.OSS_ID }} \
            -k ${{ secrets.OSS_SECRET }} \
            -f cp nebula-exchange_spark_3.0/target/nebula-exchange_spark_3.0-${{ steps.get_version.outputs.tagnum }}.jar oss://nebula-graph/maven2/nebula-exchange/${{ steps.get_version.outputs.tagnum }}/
