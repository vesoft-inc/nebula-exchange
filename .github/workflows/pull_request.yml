# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: pull_request

on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - master
      - 'v[0-9]+.*'

jobs:
  build:

    runs-on: [ self-hosted, linux ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: "adopt"
        java-version: "8"

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.8.2

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Install nebula-graph
      run: |
        mkdir -p ./logs && chmod 777 ./logs
        mkdir tmp
        pushd tmp
        git clone https://github.com/vesoft-inc/nebula-docker-compose.git
        pushd nebula-docker-compose/
        cp ../../exchange-common/src/test/resources/docker-compose.yaml .
        docker compose up -d
        sleep 180
        docker compose ps
        docker compose logs --tail 500
        popd
        popd

    - name: Build with Maven
      run: |
        mvn clean package -pl nebula-exchange_spark_2.2 -am -Pscala-2.11 -Pspark-2.2
        mvn clean package -pl nebula-exchange_spark_2.4 -am -Pscala-2.11 -Pspark-2.4
        mvn clean package -pl nebula-exchange_spark_3.0 -am -Pscala-2.12 -Pspark-3.0

    - uses: codecov/codecov-action@v2
