
{
  # Spark relation config
  spark: {
    app: {
      name: Nebula Exchange 2.0
    }
  }

  # Nebula Graph relation config
  nebula: {
    address:{
      graph:["xxx:9669","xxx:9669","xxx:9669"]
      meta:["xxx:9559"]
    }
    user: root
    pswd: nebula
    space: sf1

    # nebula client connection parameters
    connection {
      timeout: 30000
    }

    error: {
      max: 32
      output: /tmp/errors
    }

    # use google's RateLimiter to limit the requests send to NebulaGraph
    rate: {
      limit: 1024
      timeout: 1000
    }
  }

 # Processing tags
  tags: [
    {
      name: Person
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/person.csv"
      fields: [firstName,lastName,gender,birthday,creationDate,locationIP,browserUsed]
      nebula.fields: [firstName,lastName,gender,birthday,creationDate,locationIP,browserUsed]
      vertex: id
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: Place
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/static/place.csv"
      fields: [name,type,url]
      nebula.fields: [name, type, url]
      vertex: id
      batch: 2000
      partition: 60
      separator: |
      header: true
    }


    {
      name: Organisation
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/static/organisation.csv"
      fields: [name,type,url]
      nebula.fields: [name, type,url]
      vertex: id
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: Post
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/post.csv"
      fields: [creationDate,imageFile,locationIP,browserUsed,length,language,content]
      nebula.fields: [creationDate,imageFile,locationIP,browserUsed,length,language,content]
      vertex: id
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: Comment
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/comment.csv"
      fields: [creationDate,locationIP,browserUsed,length,content]
      nebula.fields: [creationDate,locationIP,browserUsed,length,content]
      vertex: id
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: Forum
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/forum.csv"
      fields: [creationDate,title]
      nebula.fields: [creationDate,title]
      vertex: id
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: Tag
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/static/tag.csv"
      fields: [name,url]
      nebula.fields: [name,url]
      vertex: id
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: Tagclass
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/static/tagclass.csv"
      fields: [name,url]
      nebula.fields: [name,url]
      vertex: id
      batch: 2000
      partition: 60
      separator: |
      header: true
    }
  ]

  # Processing edges
  edges: [
    {
      name: KNOWS
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/person_knows_person.csv"
      fields: [creationDate]
      nebula.fields: [creationDate]
      source: {
        field: Person.id0
      }
      target: {
        field: Person.id1
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: LIKES
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/person_likes_comment.csv"
      fields: [creationDate]
      nebula.fields: [creationDate]
      source: {
        field: Person.id
      }
      target: {
        field: Comment.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: LIKES
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/person_likes_post.csv"
      fields: [creationDate]
      nebula.fields: [creationDate]
      source: {
        field: Person.id
      }
      target: {
        field: Post.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }


    {
      name: HAS_TAG
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/forum_hasTag_tag.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Forum.id
      }
      target: {
        field: Tag.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

     {
      name: HAS_TAG
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/comment_hasTag_tag.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Comment.id
      }
      target: {
        field: Tag.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: HAS_TAG
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/post_hasTag_tag.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Post.id
      }
      target: {
        field: Tag.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: HAS_TYPE
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/static/tag_hasType_tagclass.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Tag.id
      }
      target: {
        field: TagClass.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: HAS_MODERATOR
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/forum_hasModerator_person.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Forum.id
      }
      target: {
        field: Person.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: HAS_MEMBER
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/forum_hasMember_person.csv"
      fields: [joinDate]
      nebula.fields: [joinDate]
      source: {
        field: Forum.id
      }
      target: {
        field: Person.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: HAS_INTEREST
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/person_hasInterest_tag.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Person.id
      }
      target: {
        field: Tag.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: HAS_CREATOR
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/post_hasCreator_person.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Post.id
      }
      target: {
        field: Person.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: HAS_CREATOR
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/comment_hasCreator_person.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Comment.id
      }
      target: {
        field: Person.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: IS_PART_OF
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/static/place_isPartOf_place.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Place.id0
      }
      target: {
        field: Place.id1
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: CONTAINER_OF
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/forum_containerOf_post.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Forum.id
      }
      target: {
        field: Post.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: IS_LOCATED_IN
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/person_isLocatedIn_place.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Person.id
      }
      target: {
        field: Place.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

     {
      name: IS_LOCATED_IN
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/post_isLocatedIn_place.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Post.id
      }
      target: {
        field: Place.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: IS_LOCATED_IN
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/comment_isLocatedIn_place.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Comment.id
      }
      target: {
        field: Place.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: IS_LOCATED_IN
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/static/organisation_isLocatedIn_place.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Organisation.id
      }
      target: {
        field: Place.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }


    {
      name: REPLY_OF
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/comment_replyOf_comment.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Comment.id0
      }
      target: {
        field: Comment.id1
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: REPLY_OF
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/comment_replyOf_post.csv"
      fields: []
      nebula.fields: []
      source: {
        field: Comment.id
      }
      target: {
        field: Post.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: STUDY_AT
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/person_studyAt_organisation.csv"
      fields: [classYear]
      nebula.fields: [classYear]
      source: {
        field: Person.id
      }
      target: {
        field: Organisation.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }

    {
      name: WORK_AT
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/dynamic/person_workAt_organisation.csv"
      fields: [workFrom]
      nebula.fields: [workFrom]
      source: {
        field: Person.id
      }
      target: {
        field: Organisation.id
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }


    {
      name: IS_SUBCLASS_OF
      type: {
        source: csv
        sink: client
      }
      path: "hdfs://127.0.0.1:9000/ldbc/sf1/social_network/static/tagclass_isSubclassOf_tagclass.csv"
      fields: []
      nebula.fields: []
      source: {
        field: TagClass.id0
      }
      target: {
        field: TagClass.id1
      }
      batch: 2000
      partition: 60
      separator: |
      header: true
    }
  ]
}


